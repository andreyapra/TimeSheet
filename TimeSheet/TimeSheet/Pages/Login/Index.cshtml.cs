using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.Extensions.Configuration;
using Newtonsoft;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using TimeSheet.Data;

namespace TimeSheet.Pages.Login
{
    public class LoginIndexModel : PageModel
    {
        private readonly TimeSheetContext _context;

        public IConfiguration Configuration { get; }
        public LoginIndexModel(TimeSheetContext context, IConfiguration configuration)
        {
            _context = context;
            Configuration = configuration;
        }

        public string Message { get; set; }
        [BindProperty]
        [Required(ErrorMessage = "Tidak boleh kosong")]
        public string InputUsername { get; set; }
        [BindProperty]
        [Required(ErrorMessage = "Tidak boleh kosong")]
        public string InputPassword { get; set; }

        //Generated by https://Json2Csharp.net

        public class UserData
        {

            public class User
            {

                public string UserID { get; set; }
                public string Username { get; set; }
                public string Password { get; set; }
                public string Email { get; set; }
                public int Role { get; set; }
                public string ManagerID { get; set; }
                public string Phone { get; set; }

            }

            public string status { get; set; }
            public IList<User> user { get; set; }

        }

        //Generated by https://Json2Csharp.net
        public static UserData _login;


        public async Task PanggilUser()
        {
            //Panggil Login API
            string Baseurl = Configuration["Setting:LoginURL"];
            string sContentType = "application/json"; // or application/xml

            JObject oJsonObject = new JObject
            {
                { "userid", InputUsername },
                { "password", InputPassword },
            };

            var _Client = new HttpClient();
            var _response = await _Client.PostAsync(Baseurl, new StringContent(oJsonObject.ToString(), Encoding.UTF8, sContentType));

            var _content = await _response.Content.ReadAsStringAsync();

            if (_response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                _login = new UserData();
                _login = JsonConvert.DeserializeObject<UserData>(_content);

                if (_login.status == "OK")
                {
                    HttpContext.Session.SetString("userid", _login.user[0].UserID);
                    HttpContext.Session.SetString("username", _login.user[0].Username);
                    HttpContext.Session.SetString("password", _login.user[0].Password);
                    HttpContext.Session.SetString("email", _login.user[0].Email);
                    HttpContext.Session.SetString("managerid", _login.user[0].ManagerID);
                    HttpContext.Session.SetString("phone", _login.user[0].Phone);

                }
            }
            Message = _content;

        }


        public IActionResult OnGet()
        {
            if (HttpContext.Session.GetString("userid") != null)
            {
                return RedirectToPage("/Index");
            }

            return Page();
        }

        public async Task<IActionResult> OnPost()
        {
            if (!ModelState.IsValid)
            {
                return Page();
            }

            await PanggilUser();

            if (HttpContext.Session.GetString("userid") != null)
            {
                return RedirectToPage("/Index");
            } else
            {
                return Page();
            }
        }

    }
}